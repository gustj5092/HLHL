// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_ubx_msgs/msg/UBXRxmMeasx.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"
#include "ublox_ubx_msgs/msg/MeasxData.idl"

module ublox_ubx_msgs {
  module msg {
    module UBXRxmMeasx_Constants {
      @verbatim (language="comment", text=
        "Constants for TOW Set")
      const uint8 TOW_NOT_SET = 0;
      const uint8 TOW_SET = 1;
      const uint8 TOW_SET2 = 2;
    };
    @verbatim (language="comment", text=
      "UBX-RXM-MEASX (0x02 0x14) - Satellite measurements for RRLP")
    struct UBXRxmMeasx {
      @verbatim (language="comment", text=
        "Header timestamp should be acquisition time")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Fields" "\n"
        "Message version")
      uint8 version;

      @verbatim (language="comment", text=
        "uint8 reserved_0   # Reserved" "\n"
        "ms - GPS measurement reference time")
      @unit (value="3")
      uint32 gps_tow;

      @verbatim (language="comment", text=
        "ms - GLONASS measurement reference time")
      uint32 glo_tow;

      @verbatim (language="comment", text=
        "ms - BeiDou measurement reference time")
      uint32 bds_tow;

      @verbatim (language="comment", text=
        "uint8 reserved_1   # Reserved" "\n"
        "ms - QZSS measurement reference time")
      @unit (value="4")
      uint32 qzss_tow;

      @verbatim (language="comment", text=
        "2^-4 ms - GPS measurement reference time accuracy")
      uint16 gps_tow_acc;

      @verbatim (language="comment", text=
        "2^-4 ms - GLONASS measurement reference time accuracy")
      uint16 glo_tow_acc;

      @verbatim (language="comment", text=
        "2^-4 ms - BeiDou measurement reference time accuracy")
      uint16 bds_tow_acc;

      @verbatim (language="comment", text=
        "uint8 reserved_2   # Reserved" "\n"
        "2^-4 ms - QZSS measurement reference time accuracy")
      @unit (value="2")
      uint16 qzss_tow_acc;

      @verbatim (language="comment", text=
        "Number of satellites in repeated block")
      uint8 num_sv;

      @verbatim (language="comment", text=
        "Flags (refer to constants for TOW Set)")
      uint8 flags;

      @verbatim (language="comment", text=
        "uint8 reserved_3   # Reserved" "\n"
        "Repeated group of data for each satellite")
      @unit (value="8")
      sequence<ublox_ubx_msgs::msg::MeasxData> sv_data;
    };
  };
};
