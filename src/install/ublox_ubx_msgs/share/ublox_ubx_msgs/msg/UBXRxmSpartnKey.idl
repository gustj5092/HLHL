// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_ubx_msgs/msg/UBXRxmSpartnKey.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"
#include "ublox_ubx_msgs/msg/SpartnKeyInfo.idl"

module ublox_ubx_msgs {
  module msg {
    typedef uint8 uint8__2[2];
    @verbatim (language="comment", text=
      "UBX-RXM-SPARTNKEY (0x02 0x36) - Transfer dynamic SPARTN keys")
    struct UBXRxmSpartnKey {
      @verbatim (language="comment", text=
        "Header timestamp should be acquisition time")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Fields" "\n"
        "Message version")
      uint8 version;

      @verbatim (language="comment", text=
        "Number of keys in the message (0, 1, or 2)")
      uint8 num_keys;

      @verbatim (language="comment", text=
        "Reserved")
      uint8__2 reserved0;

      @verbatim (language="comment", text=
        "Repeated group for key info")
      sequence<ublox_ubx_msgs::msg::SpartnKeyInfo> key_info;

      @verbatim (language="comment", text=
        "Concatenated key payloads (raw bytes)")
      sequence<uint8> key_payload;
    };
  };
};
