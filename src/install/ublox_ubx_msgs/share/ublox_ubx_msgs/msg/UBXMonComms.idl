// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_ubx_msgs/msg/UBXMonComms.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"
#include "ublox_ubx_msgs/msg/CommsPortInfo.idl"

module ublox_ubx_msgs {
  module msg {
    typedef uint8 uint8__4[4];
    module UBXMonComms_Constants {
      @verbatim (language="comment", text=
        "Constants for protocol in prot_ids")
      const uint8 PROTOCOL_UBX = 0;
      const uint8 PROTOCOL_NMEA = 1;
      const uint8 PROTOCOL_RTCM2 = 2;
      const uint8 PROTOCOL_RTCM3 = 5;
      const uint8 PROTOCOL_SPARTN = 6;
      const uint8 NO_PROTOCOL = 255;
    };
    @verbatim (language="comment", text=
      "UBXMonComms - Overall communications monitoring message")
    struct UBXMonComms {
      @verbatim (language="comment", text=
        "Header timestamp should be acquisition time")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Message version")
      uint8 version;

      @verbatim (language="comment", text=
        "Number of ports reported")
      uint8 n_ports;

      @verbatim (language="comment", text=
        "Transmit errors flags")
      uint8 tx_errors;

      @verbatim (language="comment", text=
        "Reserved byte")
      uint8 reserved0;

      @verbatim (language="comment", text=
        "Protocol identifiers active on this device:")
      @unit (value="0-3")
      uint8__4 prot_ids;

      @verbatim (language="comment", text=
        "Array of CommsPortInfo for each reported port")
      sequence<ublox_ubx_msgs::msg::CommsPortInfo> ports;
    };
  };
};
