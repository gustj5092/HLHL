// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_ubx_msgs/msg/UBXEsfMeas.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"
#include "ublox_ubx_msgs/msg/ESFMeasDataItem.idl"

module ublox_ubx_msgs {
  module msg {
    @verbatim (language="comment", text=
      "this message contains a UBX-ESF-MEAS (0x10 0x02) record" "\n"
      "External sesnor fusion measurement")
    struct UBXEsfMeas {
      @verbatim (language="comment", text=
        "Header timestamp should be acquisition time")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "time tag of measurement generated by external sensor")
      uint32 time_tag;

      @verbatim (language="comment", text=
        "time mark signal was supplied just prior to sending this message: 0 = None, 1 = on Ext0, 2 = on Ext1")
      uint8 time_mark_sent;

      @verbatim (language="comment", text=
        "trigger on rising (0) or falling (1) edge of time mark signal")
      boolean time_mark_edge;

      @verbatim (language="comment", text=
        "calibration time tag available. Always set to Zero")
      boolean calib_ttag_valid;

      @verbatim (language="comment", text=
        "Number of measurements contained in this message (optional, can be obtained from message size)")
      uint8 num_meas;

      @verbatim (language="comment", text=
        "identification number of data provideer")
      uint16 id;

      @verbatim (language="comment", text=
        "data array  of data_field & data_type")
      sequence<ublox_ubx_msgs::msg::ESFMeasDataItem> data;

      @verbatim (language="comment", text=
        "receiver local time calibrated. This field must not be supplied when calb_ttag_valid is 0")
      uint32 calib_ttag;
    };
  };
};
